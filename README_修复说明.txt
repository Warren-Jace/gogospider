═══════════════════════════════════════════════════════════════════
  敏感信息检测功能修复 - 快速开始指南
═══════════════════════════════════════════════════════════════════

问题：
  您反映开启了敏感信息检测功能，但没有生成敏感信息文件。

原因：
  程序没有自动加载敏感信息检测规则文件，导致检测器规则为空。

修复：
  ✅ 已修复！现在会自动加载配置中指定的默认规则文件。
  ✅ 已重新编译程序（spider.exe）

═══════════════════════════════════════════════════════════════════
  快速验证修复
═══════════════════════════════════════════════════════════════════

方法1：运行测试脚本（推荐）
  双击运行：test_sensitive_detection.bat
  
方法2：手动测试
  1. 打开命令行
  2. 运行：spider.exe -url https://example.com
  3. 查看是否显示：✅ 已加载敏感信息规则文件: ...
  4. 扫描完成后检查是否生成了以下文件：
     - spider_*_sensitive.txt
     - spider_*_sensitive.json

═══════════════════════════════════════════════════════════════════
  推荐使用方式
═══════════════════════════════════════════════════════════════════

🌟 方式1：默认配置（开箱即用）
   spider.exe -url https://example.com
   
   → 自动加载 sensitive_rules_config.json（70+规则）

🌟 方式2：使用标准规则（推荐日常使用）
   spider.exe -url https://example.com -sensitive-rules sensitive_rules_standard.json
   
   → 40个规则，平衡效果和性能

⚡ 方式3：快速扫描
   spider.exe -url https://example.com -sensitive-rules sensitive_rules_minimal.json
   
   → 10个规则，只检测最高危泄露

❌ 方式4：禁用检测
   spider.exe -url https://example.com -sensitive-detect=false

═══════════════════════════════════════════════════════════════════
  生成的文件说明
═══════════════════════════════════════════════════════════════════

修复前：
  ❌ 没有 _sensitive.txt
  ❌ 没有 _sensitive.json

修复后：
  ✅ spider_[domain]_[timestamp]_sensitive.txt    (文本格式报告)
  ✅ spider_[domain]_[timestamp]_sensitive.json   (JSON格式报告)

报告内容包括：
  - 扫描统计（页面数、发现数量）
  - 高危发现（密钥、密码、身份证等）
  - 中危发现（Token、内网IP等）
  - 低危发现（邮箱、手机号等）
  - 每个发现的来源URL和具体位置

═══════════════════════════════════════════════════════════════════
  可用的规则文件
═══════════════════════════════════════════════════════════════════

项目提供了3个预设规则文件：

📄 sensitive_rules_minimal.json（精简版）
   - 规则数量：10个
   - 适用场景：快速扫描、性能敏感场景
   - 检测内容：只检测最高危的泄露（云存储密钥、数据库密码等）

📄 sensitive_rules_standard.json（标准版）⭐ 推荐
   - 规则数量：40个
   - 适用场景：日常使用、大多数情况
   - 检测内容：平衡检测效果和性能

📄 sensitive_rules_config.json（完整版）
   - 规则数量：70+个
   - 适用场景：全面安全审计
   - 检测内容：最全面的检测（包括个人信息）

═══════════════════════════════════════════════════════════════════
  相关文档
═══════════════════════════════════════════════════════════════════

📖 敏感信息检测修复说明.md
   - 详细的修复说明
   - 使用方法和示例
   - 常见问题解答
   - 技术细节

📖 BUGFIX_SUMMARY.md
   - 修复总结
   - 代码变更说明
   - 验证方法

📖 修复前后对比.txt
   - 可视化对比图
   - 执行流程对比
   - 用户体验改善

🔧 test_sensitive_detection.bat
   - 自动化测试脚本
   - 环境检查
   - 使用建议

═══════════════════════════════════════════════════════════════════
  常见问题
═══════════════════════════════════════════════════════════════════

Q：修复后还是没有生成敏感信息文件？
A：可能的原因：
   1. 规则文件不存在 → 检查 sensitive_rules_config.json 是否存在
   2. 没有发现敏感信息 → 这是正常的，说明目标网站没有泄露
   3. 最低严重级别设置过高 → 尝试设置 -sensitive-min-severity LOW

Q：如何知道规则是否加载成功？
A：启动时查看控制台输出：
   ✅ 成功：✅ 已加载敏感信息规则文件: ...
   ❌ 失败：⚠️  警告: 加载敏感规则失败: ...

Q：如何自定义检测规则？
A：1. 复制现有规则文件（如 sensitive_rules_standard.json）
   2. 修改或添加规则（JSON格式）
   3. 使用 -sensitive-rules 参数指定自定义文件

Q：检测会影响扫描速度吗？
A：影响很小：
   - minimal（10规则）：几乎无影响
   - standard（40规则）：轻微影响（推荐）
   - config（70+规则）：有一定影响

Q：敏感信息会被完整保存吗？
A：默认会脱敏处理（如 AKIA****************）
   如需完整值（测试用途），修改配置文件 SaveFullValue: true

═══════════════════════════════════════════════════════════════════
  完整示例
═══════════════════════════════════════════════════════════════════

基础扫描：
  spider.exe -url https://example.com

深度扫描 + 敏感信息检测：
  spider.exe -url https://example.com ^
    -depth 5 ^
    -max-pages 1000 ^
    -sensitive-rules sensitive_rules_standard.json ^
    -sensitive-min-severity MEDIUM ^
    -output ./results/

批量扫描 + 敏感信息检测：
  spider.exe ^
    -batch-file targets.txt ^
    -batch-concurrency 5 ^
    -sensitive-rules sensitive_rules_standard.json

═══════════════════════════════════════════════════════════════════
  支持
═══════════════════════════════════════════════════════════════════

如有其他问题：
  - 查看完整文档：PARAMETERS_GUIDE.md
  - 查看配置FAQ：CONFIGURATION_FAQ.md
  - 提交Issue：https://github.com/Warren-Jace/gogospider/issues

═══════════════════════════════════════════════════════════════════
  修复状态
═══════════════════════════════════════════════════════════════════

✅ 问题已分析
✅ 代码已修复
✅ 程序已重新编译
✅ 文档已创建
✅ 测试脚本已准备

您现在可以开始使用修复后的程序了！

═══════════════════════════════════════════════════════════════════

